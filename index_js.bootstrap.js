"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmonolith_renderer_app"] = self["webpackChunkmonolith_renderer_app"] || []).push([["index_js"],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! worker-loader!./tile.worker.bootstrap.js */ \"./node_modules/worker-loader/dist/cjs.js!./tile.worker.bootstrap.js\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! leaflet */ \"./node_modules/leaflet/dist/leaflet-src.js\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var leaflet_dist_leaflet_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! leaflet/dist/leaflet.css */ \"./node_modules/leaflet/dist/leaflet.css\");\n/* harmony import */ var _leaflet_latlng_graticule_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./leaflet.latlng-graticule.js */ \"./leaflet.latlng-graticule.js\");\n/* harmony import */ var leaflet_fullscreen__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! leaflet.fullscreen */ \"./node_modules/leaflet.fullscreen/Control.FullScreen.js\");\n/* harmony import */ var leaflet_fullscreen__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(leaflet_fullscreen__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var leaflet_fullscreen_Control_FullScreen_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! leaflet.fullscreen/Control.FullScreen.css */ \"./node_modules/leaflet.fullscreen/Control.FullScreen.css\");\n\n\n\n\n\n\n\n\nvar job_id = 0;\nconst jobs = []\nconst running_jobs = { }\nconst idle_workers = [(0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), (0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), (0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), (0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), (0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), (0,worker_loader_tile_worker_bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()]\nconst coord_x_input = document.getElementById(\"coord-x\")\nconst coord_z_input = document.getElementById(\"coord-z\")\n\nconst params = new URLSearchParams(window.location.search);\nconst initial_x = params.get(\"x\") || 0;\nconst initial_z = params.get(\"z\") || 0;\nconst initial_zoom = params.get(\"zoom\") || -6;\n\n\nidle_workers.forEach(w => {\n    w.onmessage = e => {\n        idle_workers.push(w);\n        const job = running_jobs[e.data.id];\n        running_jobs[e.data.id] = undefined;\n        job.tile.getContext(\"2d\").putImageData(e.data.img, 0, 0);\n        job.on_done();\n        try_start_job();\n    }\n})\n\nfunction try_start_job() {\n    if (jobs.length > 0) {\n        const worker = idle_workers.pop();\n        if (worker) {\n            const job = jobs.shift();\n            running_jobs[job.id] = job;\n            worker.postMessage({\n                id: job.id,\n                seed: job.seed,\n                tile_x: job.coord.x,\n                tile_y: job.coord.y,\n                tile_z: job.coord.z,\n            });\n        }\n    }\n}\n\nfunction add_job(desc) {\n    jobs.push(desc);\n    try_start_job();\n}\n\nconst monoMap = leaflet__WEBPACK_IMPORTED_MODULE_1___default().map('leaflet-map', {\n    maxZoom: 2,\n    minZoom: -16,\n    crs: (leaflet__WEBPACK_IMPORTED_MODULE_1___default().CRS).Simple,\n    fullscreenControl: true,\n}).setView([-initial_z, initial_x], initial_zoom);\nconst WasmLayer = leaflet__WEBPACK_IMPORTED_MODULE_1___default().GridLayer.extend({\n    createTile: function(coord, done) {\n        let error;\n        const tile = leaflet__WEBPACK_IMPORTED_MODULE_1___default().DomUtil.create('canvas', 'leaflet-tile');\n        const size = this.getTileSize();\n        tile.width = size.x;\n        tile.height = size.y;\n\n        add_job({\n            id: ++job_id,\n            seed: this.options.seed,\n            coord: coord,\n            tile: tile,\n            on_done: () => done(error, tile)\n        });\n        return tile;\n    },\n    options: {\n        seed: 1n\n    }\n});\nlet currentLayer = null;\nnew _leaflet_latlng_graticule_js__WEBPACK_IMPORTED_MODULE_3__.LatLngGraticule({\n    showLabel: true,\n    dashArray: [4, 4],\n    zoomInterval: [\n        {start: 1, end: 2, interval: 50},\n        {start: 0, end: 1, interval: 100},\n        {start: -1, end: 1, interval: 250},\n        {start: -2, end: 1, interval: 500},\n        {start: -3, end: 1, interval: 1000},\n        {start: -4, end: 1, interval: 2500},\n        {start: -7, end: 1, interval: 10000},\n        {start: -10, end: 1, interval: 100000},\n        {start: -13, end: 1, interval: 1000000},\n        {start: -16, end: 1, interval: 10000000},\n    ],\n    color: \"#fff\",\n    weight: 1,\n}).addTo(monoMap);\nfunction chooseRandomSeed() {\n    return Math.floor(Math.random() * Math.pow(2, 48));\n}\n\nfunction showSeed(in_seed) {\n    const seed = in_seed & ((1n << 48n) - 1n);\n    if (currentLayer) {\n        monoMap.removeLayer(currentLayer);\n    }\n    currentLayer =  new WasmLayer({\n        minZoom: -999,\n        minNativeZoom: -16,\n        maxNativeZoom: -2,\n        bounds: [[-33000000, -33000000], [33000000, 33000000]],\n        seed: seed,\n    });\n    monoMap.addLayer(currentLayer);\n\n    updatePermalink();\n}\n\nconst permalinkBox = document.getElementById(\"permalink\");\n\nfunction getState() {\n    const center = monoMap.getCenter();\n    return {\n        \"seed\": seedBox.value,\n        \"x\": Math.round(center.lng),\n        \"z\": -Math.round(center.lat),\n        \"zoom\": monoMap.getZoom(),\n    }\n}\n\nfunction updatePermalink() {\n    const state = getState();\n    const newUrl = new URLSearchParams();\n    newUrl.set(\"seed\", state.seed.toString())\n    newUrl.set(\"x\", state.x.toString());\n    newUrl.set(\"z\", state.z.toString());\n    newUrl.set(\"zoom\", state.zoom.toString());\n    permalinkBox.value = window.location.origin + window.location.pathname + \"?\" + newUrl.toString();\n}\n\nmonoMap.on(\"moveend\", function () {\n    const center = monoMap.getCenter()\n    coord_x_input.value = Math.round(center.lng);\n    coord_z_input.value = -Math.round(center.lat);\n    updatePermalink();\n})\n\ncoord_x_input.value = initial_x;\ncoord_z_input.value = initial_z;\n\nconst seedBox = document.getElementById(\"seed-input\");\n\nif (params.has(\"seed\")) {\n    const seed = params.get(\"seed\")\n    seedBox.value = seed;\n    showSeed(BigInt(seed))\n} else {\n    const seed = chooseRandomSeed();\n    seedBox.value = seed;\n    showSeed(BigInt(seed));\n}\n\n\ndocument.getElementById(\"seed-random-button\").onclick = function() {\n    const seed = chooseRandomSeed();\n    seedBox.value = seed;\n    showSeed(BigInt(seed));\n}\n\n\ndocument.getElementById(\"show-seed-button\").onclick = function () {\n    if (seedBox.value === \"\") {\n        seedBox.value = chooseRandomSeed();\n    }\n    let seed;\n    try {\n        seed = BigInt(seedBox.value);\n    } catch (e) {\n        alert(\"Seed must be a number!\");\n        return;\n    }\n    showSeed(seed);\n}\n\n\n\ndocument.getElementById(\"coord-go-to\").onclick = function () {\n    monoMap.setView([-coord_z_input.value, coord_x_input.value], -2)\n};\n\ndocument.getElementById(\"copy-permalink-button\").addEventListener(\"click\", async function () {\n    await navigator.clipboard.writeText(permalinkBox.value);\n});\n\nif (!navigator.canShare) {\n    document.getElementById(\"share-button\").remove();\n} else {\n    document.getElementById(\"share-button\").addEventListener(\"click\", async function() {\n        await navigator.share({\n            \"title\": \"Map link\",\n            \"url\": permalinkBox.value,\n        })\n    })\n}\n\n\n\n//# sourceURL=webpack://monolith-renderer-app/./index.js?");

/***/ }),

/***/ "./leaflet.latlng-graticule.js":
/*!*************************************!*\
  !*** ./leaflet.latlng-graticule.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LatLngGraticule: () => (/* binding */ LatLngGraticule)\n/* harmony export */ });\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet */ \"./node_modules/leaflet/dist/leaflet-src.js\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/* eslint-disable indent,semi */\n/**\n *  Create a Canvas as ImageOverlay to draw the Lat/Lon Graticule,\n *  and show the axis tick label on the edge of the map.\n *  Author: lanwei@cloudybay.com.tw\n */\n\nconst LatLngGraticule = (function (window, document, undefined) {\n    return leaflet__WEBPACK_IMPORTED_MODULE_0___default().Layer.extend({\n        includes: ((leaflet__WEBPACK_IMPORTED_MODULE_0___default().Evented).prototype || (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Mixin).Events),\n        options: {\n            showLabel: true,\n            opacity: 1,\n            weight: 0.8,\n            color: '#aaa',\n            font: '12px Verdana',\n            dashArray: [0,0],\n            lngLineCurved: 0,\n            latLineCurved: 0,\n            zoomInterval: [\n                {start: 2, end: 2, interval: 40},\n                {start: 3, end: 3, interval: 20},\n                {start: 4, end: 4, interval: 10},\n                {start: 5, end: 7, interval: 5},\n                {start: 8, end: 20, interval: 1}\n            ],\n            sides: ['N', 'S', 'E', 'W']\n        },\n\n        initialize: function (options) {\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().setOptions(this, options);\n\n            var defaultFontName = 'Verdana';\n            var _ff = this.options.font.split(' ');\n            if (_ff.length < 2) {\n                this.options.font += ' ' + defaultFontName;\n            }\n\n            if (!this.options.fontColor) {\n                this.options.fontColor = this.options.color;\n            }\n\n            if (this.options.zoomInterval) {\n                if (this.options.zoomInterval.latitude) {\n                    this.options.latInterval = this.options.zoomInterval.latitude;\n                    if (!this.options.zoomInterval.longitude) {\n                        this.options.lngInterval = this.options.zoomInterval.latitude;\n                    }\n                }\n                if (this.options.zoomInterval.longitude) {\n                    this.options.lngInterval = this.options.zoomInterval.longitude;\n                    if (!this.options.zoomInterval.latitude) {\n                        this.options.latInterval = this.options.zoomInterval.longitude;\n                    }\n                }\n                if (!this.options.latInterval) {\n                    this.options.latInterval = this.options.zoomInterval;\n                }\n                if (!this.options.lngInterval) {\n                    this.options.lngInterval = this.options.zoomInterval;\n                }\n            }\n        },\n\n        onAdd: function (map) {\n            this._map = map;\n\n            if (!this._canvas) {\n                this._initCanvas();\n            }\n\n            map._panes.overlayPane.appendChild(this._canvas);\n\n            map.on('viewreset', this._reset, this);\n            map.on('move', this._reset, this);\n            map.on('moveend', this._reset, this);\n\n            if (map.options.zoomAnimation && (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Browser).any3d) {\n                map.on('zoomanim', this._animateZoom, this);\n            }\n\n            this._reset();\n        },\n\n        onRemove: function (map) {\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.remove(this._canvas);\n\n            map.off('viewreset', this._reset, this);\n            map.off('move', this._reset, this);\n            map.off('moveend', this._reset, this);\n\n            if (map.options.zoomAnimation) {\n                map.off('zoomanim', this._animateZoom, this);\n            }\n        },\n\n        addTo: function (map) {\n            map.addLayer(this);\n            return this;\n        },\n\n        setOpacity: function (opacity) {\n            this.options.opacity = opacity;\n            this._updateOpacity();\n            return this;\n        },\n\n        bringToFront: function () {\n            if (this._canvas) {\n                //this._map._panes.overlayPane.appendChild(this._canvas);\n            }\n            return this;\n        },\n\n        bringToBack: function () {\n            var pane = this._map._panes.overlayPane;\n            if (this._canvas) {\n                //pane.insertBefore(this._canvas, pane.firstChild);\n            }\n            return this;\n        },\n\n        getAttribution: function () {\n            return this.options.attribution;\n        },\n\n        _initCanvas: function () {\n\n            this._canvas = leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.create('canvas', '');\n\n            if (this._map.options.zoomAnimation && (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Browser).any3d) {\n                leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.addClass(this._canvas, 'leaflet-zoom-animated');\n            } else {\n                leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.addClass(this._canvas, 'leaflet-zoom-hide');\n            }\n\n            this._updateOpacity();\n\n\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().extend(this._canvas, {\n                onselectstart: (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Util).falseFn,\n                onmousemove: (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Util).falseFn,\n                onload: leaflet__WEBPACK_IMPORTED_MODULE_0___default().bind(this._onCanvasLoad, this)\n            });\n        },\n\n        _animateZoom: function (e) {\n            var map = this._map,\n                canvas = this._canvas,\n                scale = map.getZoomScale(e.zoom),\n                nw = map.containerPointToLatLng([0, 0]),\n                se = map.containerPointToLatLng([canvas.width, canvas.height]),\n                topLeft = map._latLngToNewLayerPoint(nw, e.zoom, e.center),\n                size = map._latLngToNewLayerPoint(se, e.zoom, e.center)._subtract(topLeft),\n                origin = topLeft._add(size._multiplyBy((1 / 2) * (1 - 1 / scale)));\n\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.setTransform(canvas, origin, scale);\n        },\n\n        _reset: function () {\n            var canvas = this._canvas,\n                size = this._map.getSize(),\n                lt = this._map.containerPointToLayerPoint([0, 0]);\n\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.setPosition(canvas, lt);\n\n            canvas.width  = size.x;\n            canvas.height = size.y;\n            canvas.style.width  = size.x + 'px';\n            canvas.style.height = size.y + 'px';\n\n            this.__calcInterval();\n\n            this.__draw(true);\n        },\n\n        _onCanvasLoad: function () {\n            this.fire('load');\n        },\n\n        _updateOpacity: function () {\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.setOpacity(this._canvas, this.options.opacity);\n        },\n\n        __format_lat: function(lat) {\n            if (this.options.latFormatTickLabel) {\n                return this.options.latFormatTickLabel(lat);\n            }\n            return '' + -lat;\n        },\n\n        __format_lng: function(lng) {\n            if (this.options.lngFormatTickLabel) {\n                return this.options.lngFormatTickLabel(lng);\n            }\n\n            // todo: format type of float\n            return '' + lng;\n        },\n\n        __calcInterval: function() {\n            var zoom = this._map.getZoom();\n            if (this._currZoom != zoom) {\n                this._currLngInterval = 0;\n                this._currLatInterval = 0;\n                this._currZoom = zoom;\n            }\n\n            var interv;\n\n            if (!this._currLngInterval) {\n                try {\n                    for (var idx in this.options.lngInterval) {\n                        var dict = this.options.lngInterval[idx];\n                        if (dict.start <= zoom) {\n                            if (dict.end && dict.end >= zoom) {\n                                this._currLngInterval = dict.interval;\n                                break;\n                            }\n                        }\n                    }\n                }\n                catch(e) {\n                    this._currLngInterval = 0;\n                }\n            }\n\n            if (!this._currLatInterval) {\n                try {\n                    for (var idx in this.options.latInterval) {\n                        var dict = this.options.latInterval[idx];\n                        if (dict.start <= zoom) {\n                            if (dict.end && dict.end >= zoom) {\n                                this._currLatInterval = dict.interval;\n                                break;\n                            }\n                        }\n                    }\n                }\n                catch(e) {\n                    this._currLatInterval = 0;\n                }\n            }\n        },\n\n        __draw: function(label) {\n            function _parse_px_to_int(txt) {\n                if (txt.length > 2) {\n                    if (txt.charAt(txt.length-2) == 'p') {\n                        txt = txt.substr(0, txt.length-2);\n                    }\n                }\n                try {\n                    return parseInt(txt, 10);\n                }\n                catch(e) {}\n                return 0;\n            };\n\n            var self = this,\n                canvas = this._canvas,\n                map = this._map,\n                curvedLon = this.options.lngLineCurved,\n                curvedLat = this.options.latLineCurved;\n\n            if ((leaflet__WEBPACK_IMPORTED_MODULE_0___default().Browser).canvas && map) {\n                if (!this._currLngInterval || !this._currLatInterval) {\n                    this.__calcInterval();\n                }\n\n                var latInterval = this._currLatInterval,\n                    lngInterval = this._currLngInterval;\n\n                var ctx = canvas.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.lineWidth = this.options.weight;\n                ctx.strokeStyle = this.options.color;\n                ctx.fillStyle = this.options.fontColor;\n                ctx.setLineDash(this.options.dashArray);\n\n                if (this.options.font) {\n                    ctx.font = this.options.font;\n                }\n                var txtWidth = ctx.measureText('0').width;\n                var txtHeight = 12;\n                try {\n                    var _font_size = ctx.font.trim().split(' ')[0];\n                    txtHeight = _parse_px_to_int(_font_size);\n                }\n                catch(e) {}\n\n                var ww = canvas.width,\n                    hh = canvas.height;\n\n                var lt = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(0, 0));\n                var rt = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(ww, 0));\n                var rb = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(ww, hh));\n\n                var _lat_b = rb.lat,\n                    _lat_t = lt.lat;\n                var _lon_l = lt.lng,\n                    _lon_r = rt.lng;\n\n                var _point_per_lat = (_lat_t - _lat_b) / (hh * 0.2);\n                if (isNaN(_point_per_lat)) {\n                    return;\n                }\n\n\n                var _point_per_lon = (_lon_r - _lon_l) / (ww * 0.2);\n                if (_point_per_lon < 1) { _point_per_lon = 1; }\n                if (_lon_l > 0 && _lon_r < 0) {\n                    _lon_r += 360;\n                }\n                _lon_r = parseInt(_lon_r + _point_per_lon, 10);\n                _lon_l = parseInt(_lon_l - _point_per_lon, 10);\n\n                var ll, latstr, lngstr, _lon_delta = 0.5;\n                function __draw_lat_line(self, lat_tick) {\n                    ll = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, _lon_l));\n                    latstr = self.__format_lat(lat_tick);\n                    txtWidth = ctx.measureText(latstr).width;\n                    var spacer = self.options.showLabel && label ? txtWidth + 10 : 0;\n\n                    if (curvedLat) {\n                        if (typeof(curvedLat) == 'number') {\n                            _lon_delta = curvedLat;\n                        }\n\n                        var __lon_left = _lon_l, __lon_right = _lon_r;\n                        if (ll.x > 0) {\n                            var __lon_left = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(0, ll.y));\n                            __lon_left = __lon_left.lng - _point_per_lon;\n                            ll.x = 0;\n                        }\n                        var rr = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, __lon_right));\n                        if (rr.x < ww) {\n                            __lon_right = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(ww, rr.y));\n                            __lon_right = __lon_right.lng + _point_per_lon;\n                            if (__lon_left > 0 && __lon_right < 0) {\n                                __lon_right += 360;\n                            }\n                        }\n\n                        ctx.beginPath();\n                        ctx.moveTo(ll.x + spacer, ll.y);\n                        var _prev_p = null;\n                        for (var j=__lon_left; j<=__lon_right; j+=_lon_delta) {\n                            rr = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, j));\n                            ctx.lineTo(rr.x - spacer, rr.y);\n\n                            if (self.options.showLabel && label && _prev_p != null) {\n                                if (_prev_p.x < 0 && rr.x >= 0) {\n                                    var _s = (rr.x - 0) / (rr.x - _prev_p.x);\n                                    var _y = rr.y - ((rr.y - _prev_p.y) * _s);\n                                    ctx.fillText(latstr, 0, _y + (txtHeight/2));\n                                }\n                                else if (_prev_p.x <= (ww-txtWidth) && rr.x > (ww-txtWidth)) {\n                                    var _s = (rr.x - ww) / (rr.x - _prev_p.x);\n                                    var _y = rr.y - ((rr.y - _prev_p.y) * _s);\n                                    ctx.fillText(latstr, ww-txtWidth, _y + (txtHeight/2)-2);\n                                }\n                            }\n\n                            _prev_p = {x:rr.x, y:rr.y, lon:j, lat:i};\n                        }\n                        ctx.stroke();\n                    }\n                    else {\n                        var __lon_right = _lon_r;\n                        var rr = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, __lon_right));\n                        if (curvedLon) {\n                            __lon_right = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(0, rr.y));\n                            __lon_right = __lon_right.lng;\n                            rr = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, __lon_right));\n\n                            var __lon_left = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(ww, rr.y));\n                            __lon_left = __lon_left.lng;\n                            ll = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(lat_tick, __lon_left));\n                        }\n\n                        ctx.beginPath();\n                        ctx.moveTo(1 + spacer, ll.y);\n                        ctx.lineTo(rr.x-1 - spacer, rr.y);\n                        ctx.stroke();\n                        if (self.options.showLabel && label) {\n                            var _yy = ll.y + (txtHeight/2)-2;\n                            ctx.fillText(latstr, 0, _yy);\n                            ctx.fillText(latstr, ww-txtWidth, _yy);\n                        }\n                    }\n                };\n\n                if (latInterval > 0) {\n                    for (var i=latInterval; i<=_lat_t; i+=latInterval) {\n                        if (i >= _lat_b) {\n                            __draw_lat_line(this, i);\n                        }\n                    }\n                    for (var i=0; i>=_lat_b; i-=latInterval) {\n                        if (i <= _lat_t) {\n                            __draw_lat_line(this, i);\n                        }\n                    }\n                }\n\n                function __draw_lon_line(self, lon_tick) {\n                    lngstr = self.__format_lng(lon_tick);\n                    txtWidth = ctx.measureText(lngstr).width;\n                    var bb = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(_lat_b, lon_tick));\n                    var spacer = self.options.showLabel && label ? txtHeight + 5 : 0;\n\n                    if (curvedLon) {\n                        if (typeof(curvedLon) == 'number') {\n                            _lat_delta = curvedLon;\n                        }\n\n                        ctx.beginPath();\n                        ctx.moveTo(bb.x, 5 + spacer);\n                        var _prev_p = null;\n                        for (var j=_lat_b; j<_lat_t; j+=_lat_delta) {\n                            var tt = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(j, lon_tick));\n                            ctx.lineTo(tt.x, tt.y - spacer);\n\n                            if (self.options.showLabel && label && _prev_p != null) {\n                                if (_prev_p.y > 8 && tt.y <= 8) {\n                                    ctx.fillText(lngstr, tt.x - (txtWidth/2), txtHeight + 5);\n                                }\n                                else if (_prev_p.y >= hh && tt.y < hh) {\n                                    ctx.fillText(lngstr, tt.x - (txtWidth/2), hh-2);\n                                }\n                            }\n\n                            _prev_p = {x:tt.x, y:tt.y, lon:lon_tick, lat:j};\n                        }\n                        ctx.stroke();\n                    }\n                    else {\n                        var __lat_top = _lat_t;\n                        var tt = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(__lat_top, lon_tick));\n                        if (curvedLat) {\n                            __lat_top = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(tt.x, 0));\n                            __lat_top = __lat_top.lat;\n                            if (__lat_top > 90) { __lat_top = 90; }\n                            tt = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(__lat_top, lon_tick));\n\n                            var __lat_bottom = map.containerPointToLatLng(leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(bb.x, hh));\n                            __lat_bottom = __lat_bottom.lat;\n                            if (__lat_bottom < -90) { __lat_bottom = -90; }\n                            bb = self._latLngToCanvasPoint(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(__lat_bottom, lon_tick));\n                        }\n\n                        ctx.beginPath();\n                        ctx.moveTo(tt.x, 5 + spacer);\n                        ctx.lineTo(bb.x, hh-1 - spacer);\n                        ctx.stroke();\n\n                        if (self.options.showLabel && label) {\n                            ctx.fillText(lngstr, tt.x - (txtWidth/2), txtHeight+5);\n                            ctx.fillText(lngstr, bb.x - (txtWidth/2), hh-3);\n                        }\n                    }\n                };\n\n                if (lngInterval > 0) {\n                    for (var i=lngInterval; i<=_lon_r; i+=lngInterval) {\n                        if (i >= _lon_l) {\n                            __draw_lon_line(this, i);\n                        }\n                    }\n                    for (var i=0; i>=_lon_l; i-=lngInterval) {\n                        if (i <= _lon_r) {\n                            __draw_lon_line(this, i);\n                        }\n                    }\n                }\n            }\n        },\n\n        _latLngToCanvasPoint: function(latlng) {\n            var map = this._map;\n            var projectedPoint = map.project(leaflet__WEBPACK_IMPORTED_MODULE_0___default().latLng(latlng));\n            projectedPoint._subtract(map.getPixelOrigin());\n            return leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(projectedPoint).add(map._getMapPanePos());\n        }\n\n    });\n}(undefined, document));\n\n\n//# sourceURL=webpack://monolith-renderer-app/./leaflet.latlng-graticule.js?");

/***/ }),

/***/ "./node_modules/worker-loader/dist/cjs.js!./tile.worker.bootstrap.js":
/*!***************************************************************************!*\
  !*** ./node_modules/worker-loader/dist/cjs.js!./tile.worker.bootstrap.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Worker_fn)\n/* harmony export */ });\nfunction Worker_fn() {\n  return new Worker(__webpack_require__.p + \"bootstrap.worker.js\");\n}\n\n\n//# sourceURL=webpack://monolith-renderer-app/./tile.worker.bootstrap.js?./node_modules/worker-loader/dist/cjs.js");

/***/ })

}]);